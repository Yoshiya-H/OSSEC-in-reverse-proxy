---
- name: Check the file exists
  stat:
    path: /etc/yum.repos.d/snapd-amzn2.repo
  register: repo

- name: Get ossec-hids archive file
  get_url:
    url: https://people.canonical.com/~mvo/snapd/amazon-linux2/snapd-amzn2.repo
    dest: /etc/yum.repos.d/
  when: repo.stat.exists == false

- name: Install snapd from snapd-amzn2.repo
  yum:
    name: snapd
    state: present

- name: enable service snapd.socket
  systemd:
    name: snapd.socket
    enabled: yes

- name: Check if the symbolic sym_snap exists
  stat:
    path: /snap
  register: sym_snap

- name: Create a symbolic link for snap
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    owner: root
    group: root
    state: link
    mode: '777'
  when: sym_snap.stat.islnk is not defined
  
- name: Remove snap certbo if it exist
  yum:
    name: certbo
    state: absent

- name: restart service snapd.socket
  systemd:
    name: snapd.socket
    state: restarted

- name: Install snap core
  snap:
    name: core

#- name: Install snap core
#  command: "snap install core"

- name: Refresh snap core
  command: "snap refresh core"

- name: Install certbot with option --classic
  snap:
    name: certbot
    classic: yes

- name: Check if the symbolic sym_certbot exists
  stat:
    path: /usr/bin/certbot
  register: sym_certbot

- name: Create a symbolic link for certbot
  file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    owner: root
    group: root
    state: link
    mode: '0777'
  when: sym_certbot.stat.islnk is not defined

- name: obtains cert keys
  command: certbot --nginx --non-interactive --email test@example.co.jp --keep-until-expiring --agree-tos --domain example.com

- name: start nginx
  service:
    name: nginx
    state: restarted
    enabled: yes
